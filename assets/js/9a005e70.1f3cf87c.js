(self.webpackChunkrested_landing_page=self.webpackChunkrested_landing_page||[]).push([[6254],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,m=d["".concat(l,".").concat(p)]||d[p]||h[p]||s;return n?o.createElement(m,r(r({ref:t},u),{},{components:n})):o.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,r=new Array(s);r[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:a,r[1]=i;for(var c=2;c<s;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},51211:(e,t)=>{t.x="__Secure-rested-access-token"},82146:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));n(51211);const s={id:"custom-access-func",title:"Custom Access Function"},r=void 0,i={unversionedId:"custom-access-func",id:"custom-access-func",title:"Custom Access Function",description:"Custom Access Function allows more granular control on how the data in the endpoints is accessed. These functions are set up on the Project Dashboard and are executed on the server side for every request to the endpoint with this functionality enabled.",source:"@site/docs/custom-access-func.md",sourceDirName:".",slug:"/custom-access-func",permalink:"/docs/custom-access-func",draft:!1,tags:[],version:"current",frontMatter:{id:"custom-access-func",title:"Custom Access Function"},sidebar:"docs",previous:{title:"Real-time data",permalink:"/docs/websockets"},next:{title:"JSONata, query and transform",permalink:"/docs/jsonata"}},l={},c=[{value:"Why these functions are important",id:"why-these-functions-are-important",level:2},{value:"Example - Chat application",id:"example---chat-application",level:2},{value:"How Custom Access Functions solve this issue?",id:"how-custom-access-functions-solve-this-issue",level:2},{value:"Some important notes",id:"some-important-notes",level:2},{value:"Example of a function",id:"example-of-a-function",level:2},{value:"Environment variables",id:"environment-variables",level:3},{value:"Accessing data from other endpoints",id:"accessing-data-from-other-endpoints",level:3},{value:"Return values",id:"return-values",level:3},{value:"Debbugging",id:"debbugging",level:2}],u={toc:c},d="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Custom Access Function")," allows more granular control on how the data in the endpoints is accessed. These functions are set up on the Project Dashboard and are executed on the server side for every request to the endpoint with this functionality enabled."),(0,a.kt)("h2",{id:"why-these-functions-are-important"},"Why these functions are important"),(0,a.kt)("p",null,"When is comes to accessing the data without a Custom Access Function, RESTED_DEV offers ",(0,a.kt)("a",{parentName:"p",href:"/docs/secure-endpoints"},"Secure endpoints"),", and ",(0,a.kt)("a",{parentName:"p",href:"/docs/getting-started/endpoints#additional-data-access-options"},"Additional data options"),", these can be enabled on the Project Dashboard and the access control to the data is done on the server side. This already gives a good level of security, but the control to check who is accessing the data is limited, and used incorrecly could expose the data of the endpoint."),(0,a.kt)("p",null,"Custom Access Functions come in to help with more complex use cases and give more control to the administrator of a Project."),(0,a.kt)("p",null,"Let's start with an example of a typical use case to understand better this functionality."),(0,a.kt)("h2",{id:"example---chat-application"},"Example - Chat application"),(0,a.kt)("p",null,"Let's imagine you are building a Chat application that allows users to have private conversations with each other. When user1 send a message to user2, that message should only be available for those 2 users."),(0,a.kt)("p",null,"With ",(0,a.kt)("strong",{parentName:"p"},"Secure Endpoints")," and ",(0,a.kt)("strong",{parentName:"p"},"Custom Data Options")," only, this would not be possible. If user3 would try to request data from the endpoint containing messages (without JSONata filtering), all messages would be sent to the client - even though the client application can filter out the records, a more curious user could inspect the request and check the messages there."),(0,a.kt)("p",null,"For these use cases, the basic usage or the RESTED_DEV endpoints is not enough."),(0,a.kt)("h2",{id:"how-custom-access-functions-solve-this-issue"},"How Custom Access Functions solve this issue?"),(0,a.kt)("p",null,"You can check who is requesting the message and decide whether or not that user can receive it. You do this by checking uniqueIds (and other data), and match it against the requested data, or even data from other endpoints."),(0,a.kt)("p",null,"You can easily implement role based access using this function."),(0,a.kt)("h2",{id:"some-important-notes"},"Some important notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The function is written in JavaScript as a IIFE function"),(0,a.kt)("li",{parentName:"ul"},"To enable this function in an endpoint the funtion must be saved first in the Project configuration"),(0,a.kt)("li",{parentName:"ul"},"When this function is enabled for an endpoint, all other checks are ignored, you have full control to check who can access the data - be aware, if used incorrectly you can open the endpoint to authenticathed and non-authenticathed users.")),(0,a.kt)("h2",{id:"example-of-a-function"},"Example of a function"),(0,a.kt)("p",null,"In the context of a chat application, in the following function we are checking if the user accessing the data can receive access it. We do this by checking if their uniqueId is equal to fromUserId or toUserId."),(0,a.kt)("p",null,"Remember that this depends on how your data is structured. RESTED_DEV gives you the flexibility to structure the data in any way, so you need to write your function accordingly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'//GET|roles|rolesVar\n//GET|messages|messagesVar\n\n(function myCustomAccessFunction() {\n  // global vars:\n  // console.log(\'The data contained in accessed endpoint:\', ACCESSED_DATA)\n  // console.log(\'The current signed in user:\', SIGNED_IN_USER)\n  // console.log("Name of the accessed endpoint:", THIS_ENDPOINT_NAME);\n  // ...and more\n\n  // we can control the access to each endpoint in the project\n  // in this example, we just want to control access to the messages endpoint\n  if (THIS_ENDPOINT_NAME !== "messages") {\n    return true;\n  }\n\n  if (THIS_ENDPOINT_IS_SECURE && !SIGNED_IN_USER) {\n    throw new Error("This endpoint requires an authenticathed user");\n  }\n\n  // since we are sending messages, we allow the auth users to post anything\n  if (REQUEST_METHOD === "POST") {\n    // we could do other checks here\n    console.log("NEW_DATA_TO_PERSIST", NEW_DATA_TO_PERSIST);\n    return true;\n  }\n\n  // here we control which messages the user has access to\n  if (REQUEST_METHOD === "GET") {\n    // we could do other checks here\n\n    // we are gonna filter the record ids the logged in user has access to\n    const accessedData = Array.isArray(ACCESSED_DATA)\n      ? ACCESSED_DATA\n      : [ACCESSED_DATA];\n\n    return accessedData\n      .filter((record) => {\n        const userUniqueId = SIGNED_IN_USER.uniqueId;\n        if (\n          record.data.fromUserId === userUniqueId ||\n          record.data.toUserId === userUniqueId\n        ) {\n          return true;\n        }\n      })\n      .map((record) => record.uniqueId);\n  }\n})();\n')),(0,a.kt)("p",null,"The function must be written as a IIFE function and from within the function you will have access to enviroment variables."),(0,a.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"Variable"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"SIGNED_IN_USER"),(0,a.kt)("td",null,"If there's a user signed in, this variable will contain their data.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ACCESSED_DATA"),(0,a.kt)("td",null,"Contains the accessed data. This data is not avaialable for POST requests.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"THIS_ENDPOINT_NAME"),(0,a.kt)("td",null,"Name of the endpoint. Currently you can only set one function per project, if you want to use it in multiple endpoints you can use this variable to conditionaly make checks to the data.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"NEW_DATA_TO_PERSIST"),(0,a.kt)("td",null,"Contains the data to be persisted/updated. Only available for POST and PUT requests.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"THIS_ENDPOINT_IS_SECURE"),(0,a.kt)("td",null,"Boolean where the accessed endpoint is secured.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"REQUEST_METHOD"),(0,a.kt)("td",null,"Type of request: GET, POST, PUT, DELETE"))),(0,a.kt)("h3",{id:"accessing-data-from-other-endpoints"},"Accessing data from other endpoints"),(0,a.kt)("p",null,"In some cases, like role based access, you might need to access data from other endoints."),(0,a.kt)("p",null,"To do so, before you define a function, you need to include the following string (like we did in the example above):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"//GET|roles|rolesVar\n")),(0,a.kt)("p",null,'The string is divided in 3 parts, delimited by the pipe "|" symbol:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"//GET|name_of_the_endpoint|name_of_the_variable\n")),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"name_of_the_endpoint"),(0,a.kt)("td",null,"Name of the endpoint you want to get data from. The endpoint needs to exist in the Project.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"name_of_the_variable"),(0,a.kt)("td",null,"The data will be requested will be available as an environment variable that can be accessed from within the function."))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You can get the data from multiple endpoints but we recomend not doing so as it will impact the response times of the request to the endpoint.")),(0,a.kt)("h3",{id:"return-values"},"Return values"),(0,a.kt)("p",null,"The function is expected to return certain values:"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("strong",null,"Return value")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Description"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Boolean - true"),(0,a.kt)("td",null,"Allow access to the data/endpoint.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Boolean - false"),(0,a.kt)("td",null,"Deny access to the data/endpoint.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Array of uniqueIds"),(0,a.kt)("td",null,"List of uniqueIds from the accessed data. The endpoint will only return records that match the ids."))),(0,a.kt)("h2",{id:"debbugging"},"Debbugging"),(0,a.kt)("p",null,"To debug the data, you need to enable debug mode for your endpoint. This can be done on the Dashboard, directly in the endpoint."),(0,a.kt)("p",null,"When enabled, the endpoint will return as well the output of anything logged within the function."),(0,a.kt)("p",null,"The structure of the response changes."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Be mindful when enabling debugging mode for a production endpoint:\n-The response format changes, if your application is not handling that it could cause problems;\n-Data logged in the function could be exposed to the user;")))}h.isMDXComponent=!0}}]);